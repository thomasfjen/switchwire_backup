####Pressure Advance

[gcode_macro PA]
#PS/SS Slicer Start G_Code: PA FILAMENT=[filament_type]
gcode:
    #Pressure ADVANCE
    {% set FILAMENT_PA = params.FILAMENT|default(ABS)|string %}
    {% if FILAMENT_PA == "ABS" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
    {% endif %}
    {% if FILAMENT_PA == "PLA" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
    {% endif %}
    {% if FILAMENT_PA == "FLEX" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.02
    {% endif %}

# [gcode_macro PRINT_START]
# gcode:        
# #PS Start G-Code:
# #M104 S0 ; Stops PS/SS from sending temp waits separately
# #M140 S0
# #PA FILAMENT=[filament_type]
# #PRINT_START BED=[first_layer_bed_temperature] HOTEND=[first_layer_temperature[initial_extruder]]

#     # Parameters
#     {% set bedtemp = params.BED|int %}
#     {% set hotendtemp = params.HOTEND|int %}
#     STATUS_HOMING                         # Stealthburner LED         
#     G28                                   # Full Home
#     # HEAT BED & HOTEND
#     STATUS_HEATING                        # Stealthburner LED
#     M190 S{bedtemp}                       # set & wait for bed temp
#     #M104 S120                            # set Hotend to 120°C while mesh & wait for chamber
#     #TEMPERATURE_WAIT sensor="temperature_sensor chamber" minimum=30
#     # HOME Z; MESH; PURGE
#     M109 S{hotendtemp}
#     STATUS_CALIBRATING_Z
#     G28 Z                                 # final z homing
#     CALIBRATE_Z                           # CALIBRATE Z Macro (Auto-Z)
#     STATUS_MESHING                        # Stealthburner LED
#     BED_MESH_CALIBRATE                    # Adapative Bed Mesh
#     STATUS_CLEANING
#     #LINE_PURGE                            # Voron Logo Purge
#     ADPATIVE_PURGE  
#     G90                                   # absolute positioning
#     STATUS_PRINTING                       # Stealthburner LED
#     M117 Starting Printing

[gcode_macro PRINT_START]
gcode:        
#PS Start G-Code:
#M104 S0 ; Stops PS/SS from sending temp waits separately
#M140 S0
#PA FILAMENT=[filament_type]
#PRINT_START BED=[first_layer_bed_temperature] HOTEND=[first_layer_temperature[initial_extruder]]

    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    STATUS_HOMING                         # Stealthburner LED         
    G28                                   # Full Home
    # HEAT BED & HOTEND
    STATUS_HEATING                        # Stealthburner LED
    M190 S{bedtemp}                       # set & wait for bed temp
    #TEMPERATURE_WAIT sensor="temperature_sensor chamber" minimum=30
    # HOME Z; MESH; PURGE
    M109 S150    
    STATUS_CALIBRATING_Z
    G28 Z                                 # final z homing
    CALIBRATE_Z                           # CALIBRATE Z Macro (Auto-Z)
    STATUS_MESHING                        # Stealthburner LED
    M104 S{hotendtemp}
    Attach_Probe
    BED_MESH_CALIBRATE ADAPTIVE=1         # Adapative Bed Mesh
    Dock_Probe
    M109 S{hotendtemp}
    STATUS_CLEANING
    #LINE_PURGE                           # Adaptive Line Purge
    VORON_PURGE                        # Adaptive Voron Logo Purge
    # #Manual Purge
    # G1 X20 Y5 F10000
    # G0 Z0.4                                          # Raises Z to 0.4
    # G91                                              # Incremental positioning 
    # G1 X100 E20 F1000                                # Purge line
    # #/Manual Purge
    G90                                   # absolute positioning
    STATUS_PRINTING                       # Stealthburner LED
    M117 Starting Printing

[gcode_macro END_PRINT]
gcode:
#PS END G-CODE:
# END_PRINT
    M117 Printing finished
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X10 Y220
    # Disable steppers
    M84
    STATUS_READY


###### Homing Macros

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.6 %}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    G90



######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro Auto_Z]
gcode:
      CALIBRATE_Z

[gcode_macro bed_level]
gcode:
    STATUS_LEVELING
    SCREWS_TILT_CALCULATE
    STATUS_READY

[gcode_macro bed_mesh]
gcode:
    STATUS_MESHING
    BED_MESH_CALIBRATE
    STATUS_READY

[gcode_macro angle_servo]
gcode:
	{% set ANGLE  = params.ANGLE|int %}
	
    SET_SERVO SERVO=klicky_servo ANGLE={ANGLE}
    G4 P250
    SET_SERVO SERVO=klicky_servo WIDTH=0.0

#Load/Unload Filament

[gcode_macro UNLOAD_FILAMENT_220]
gcode:
    M109 S220
    M83
    G1 E15 F300
    G1 E-50 F3000
    M82
    M104 S0

[gcode_macro LOAD_FILAMENT_220]
gcode:
    M109 S220
    M83
    G1 E50 F1800
    G1 E30 F300
    G1 E5 F1800
    M82
    M104 S0

[gcode_macro UNLOAD_FILAMENT_250]
gcode:
    M109 S250
    M83
    G1 E15 F300
    G1 E-50 F3000
    M82
    M104 S0

[gcode_macro LOAD_FILAMENT_250]
gcode:
    M109 S250
    M83
    G1 E50 F1800
    G1 E30 F300
    G1 E5 F1800
    M82
    M104 S0

# Github Backup
[gcode_shell_command backup_to_github]
command: sh /home/pi/backup.sh
timeout: 30.
verbose: True

[gcode_macro GITHUB_BACKUP]
gcode:
    RUN_SHELL_COMMAND CMD=backup_to_github

[gcode_shell_command plot_graph]
command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

[gcode_button e-button]
  pin: ^!gpio16
  press_gcode: { action_emergency_stop() }
